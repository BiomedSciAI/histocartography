
:autogenerated:

histocartography.preprocessing package
======================================

.. automodule:: histocartography.preprocessing
    


    Submodules:

    .. toctree::
       :maxdepth: 1

       histocartography.preprocessing.assignment_matrix
       histocartography.preprocessing.feature_extraction
       histocartography.preprocessing.graph_builders
       histocartography.preprocessing.io
       histocartography.preprocessing.nuclei_concept_extraction
       histocartography.preprocessing.nuclei_extraction
       histocartography.preprocessing.stain_normalizers
       histocartography.preprocessing.stats
       histocartography.preprocessing.superpixel
       histocartography.preprocessing.tissue_mask
       histocartography.preprocessing.utils



    Summary
    -------

    ``__all__`` Classes:


    .. list-table::
    
       * - :class:`AnnotationPostProcessor <histocartography.preprocessing.tissue_mask.AnnotationPostProcessor>`
         - Base pipelines step
       * - :class:`AssignmnentMatrixBuilder <histocartography.preprocessing.assignment_matrix.AssignmnentMatrixBuilder>`
         - Assigning low-level instances to high-level instances using instance maps.
       * - :class:`AugmentedDeepFeatureExtractor <histocartography.preprocessing.feature_extraction.AugmentedDeepFeatureExtractor>`
         - Helper class to extract deep features from instance maps with different augmentations
       * - :class:`ColorMergedSuperpixelExtractor <histocartography.preprocessing.superpixel.ColorMergedSuperpixelExtractor>`
         - Helper class to extract superpixels from images
       * - :class:`DGLGraphLoader <histocartography.preprocessing.io.DGLGraphLoader>`
         - Base pipelines step
       * - :class:`DeepFeatureExtractor <histocartography.preprocessing.feature_extraction.DeepFeatureExtractor>`
         - Helper class to extract deep features from instance maps
       * - :class:`GaussianTissueMask <histocartography.preprocessing.tissue_mask.GaussianTissueMask>`
         - Helper class to extract tissue mask from images
       * - :class:`GraphDiameter <histocartography.preprocessing.stats.GraphDiameter>`
         - Base pipelines step
       * - :class:`GridAugmentedDeepFeatureExtractor <histocartography.preprocessing.feature_extraction.GridAugmentedDeepFeatureExtractor>`
         - Base class for feature extraction
       * - :class:`GridDeepFeatureExtractor <histocartography.preprocessing.feature_extraction.GridDeepFeatureExtractor>`
         - Base class for feature extraction
       * - :class:`H5Loader <histocartography.preprocessing.io.H5Loader>`
         - Base pipelines step
       * - :class:`HandcraftedFeatureExtractor <histocartography.preprocessing.feature_extraction.HandcraftedFeatureExtractor>`
         - Helper class to extract handcrafted features from instance maps
       * - :class:`ImageLoader <histocartography.preprocessing.io.ImageLoader>`
         - Base pipelines step
       * - :class:`KNNGraphBuilder <histocartography.preprocessing.graph_builders.KNNGraphBuilder>`
         - k-Nearest Neighbors Graph class for graph building.
       * - :class:`MacenkoStainNormalizer <histocartography.preprocessing.stain_normalizers.MacenkoStainNormalizer>`
         - Stain normalization based on the method of: M.
       * - :class:`NucleiConceptExtractor <histocartography.preprocessing.nuclei_concept_extraction.NucleiConceptExtractor>`
         - Class for Nuclei concept extraction.
       * - :class:`NucleiExtractor <histocartography.preprocessing.nuclei_extraction.NucleiExtractor>`
         - Nuclei extraction
       * - :class:`RAGGraphBuilder <histocartography.preprocessing.graph_builders.RAGGraphBuilder>`
         - Super-pixel Graphs class for graph building.
       * - :class:`SLICSuperpixelExtractor <histocartography.preprocessing.superpixel.SLICSuperpixelExtractor>`
         - Use the SLIC algorithm to extract superpixels.
       * - :class:`SuperpixelCounter <histocartography.preprocessing.stats.SuperpixelCounter>`
         - Base pipelines step
       * - :class:`VahadaneStainNormalizer <histocartography.preprocessing.stain_normalizers.VahadaneStainNormalizer>`
         - Stain normalization inspired by method of: A.
    



Reference
---------
If you use `histocartography` in your projects, please cite the following:

.. code-block:: python

    @inproceedings{pati2021,
        title = {Hierarchical Graph Representations for Digital Pathology},
        author = {Pushpak Pati, Guillaume Jaume, Antonio Foncubierta, Florinda Feroce, Anna Maria Anniciello, Giosu√® Scognamiglio, Nadia Brancati, Maryse Fiche, Estelle Dubruc, Daniel Riccio, Maurizio Di Bonito, Giuseppe De Pietro, Gerardo Botti, Jean-Philippe Thiran, Maria Frucci, Orcun Goksel, Maria Gabrani},
        booktitle = {https://arxiv.org/pdf/2102.11057},
        year = {2021}
    } 