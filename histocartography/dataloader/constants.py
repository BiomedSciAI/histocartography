import dgl
import torch

NORMALIZATION_FACTORS = {
    'cell_graph': {'mean': torch.tensor([9.3564e+01, 6.4326e+01, 4.2089e+02, 6.0968e-01, 4.3258e+00, 2.0927e+03,
                                         4.0686e+01, 1.7329e+01, 3.8951e+02, 7.1562e-01, 2.5981e+02, 2.2306e+01,
                                         1.3914e+01, 6.1413e+01, 9.4021e-01, 8.7411e+01]),
                   'std': torch.tensor([1.5778e+01, 2.2866e+01, 2.4106e+02, 4.6837e-01, 1.2226e-01, 1.2184e+03,
                                        2.6063e+01, 5.9187e+00, 2.9949e+02, 1.5391e-01, 1.4410e+02, 8.3460e+00,
                                        4.2261e+00, 1.8914e+01, 4.6122e-02, 5.4640e+01])},
    'superpx_graph': {'mean': torch.tensor([2.1981e+04,  3.7003e+04,  7.0996e-01,  1.1810e+02,  9.0075e-01,
                                            5.9065e-01,  2.4262e+04,  1.8072e+02,  1.0477e+02,  6.1989e-03,
                                            8.3046e+02,  7.8040e-01,  3.0056e-05,  5.2342e-03,  4.6998e-02,
                                            9.2689e-02,  1.2871e-01,  1.6947e-01,  1.9739e-01,  3.5948e-01,
                                            1.9232e+02,  4.4891e+01,  1.9881e+02, -6.6931e-01,  9.0838e+01,
                                            1.8622e-03,  6.1457e-02,  1.3770e-01,  1.8241e-01,  1.8166e-01,
                                            1.5252e-01,  1.1852e-01,  1.6387e-01,  1.5208e+02,  4.8407e+01,
                                            1.5258e+02, -1.7227e-02,  9.9288e+01,  3.4702e-06,  4.6681e-04,
                                            2.3783e-02,  1.1691e-01,  2.1831e-01,  2.4339e-01,  1.9305e-01,
                                            2.0409e-01,  1.7921e+02,  3.6415e+01,  1.8072e+02, -1.6544e-01,
                                            9.9342e+01,  4.1816e+00,  2.7873e+02,  1.1188e+01,  1.5125e-01,
                                            4.7216e-02,  8.1969e-03]),
                      'std': torch.tensor([1.2505e+05, 2.2614e+05, 1.7029e-01, 1.1818e+02, 1.0489e+00, 1.3246e-01,
                                           1.5343e+05, 2.4484e+02, 1.3306e+02, 9.1175e-01, 2.4338e+03, 1.1259e-01,
                                           2.2788e-04, 8.6511e-03, 4.6669e-02, 6.3628e-02, 6.0786e-02, 6.1151e-02,
                                           6.5038e-02, 2.0853e-01, 2.4549e+01, 9.1727e+00, 2.9905e+01, 8.8591e-01,
                                           1.8297e+01, 4.8199e-03, 6.2920e-02, 8.4730e-02, 7.9891e-02, 6.9107e-02,
                                           6.2152e-02, 6.3559e-02, 1.9336e-01, 3.2826e+01, 8.4669e+00, 4.0336e+01,
                                           7.7069e-01, 1.3678e+01, 3.0714e-05, 1.7742e-03, 3.2247e-02, 8.7976e-02,
                                           1.0244e-01, 9.1583e-02, 8.5106e-02, 2.0822e-01, 2.4877e+01, 6.6230e+00,
                                           2.9747e+01, 7.4435e-01, 1.4869e+01, 4.6195e-01, 1.0825e+02, 2.7396e+00,
                                           1.0675e-01, 7.5780e-02, 3.3562e-02])}
    }


COLLATE_FN = {
    'DGLGraph': lambda x: dgl.batch(x),
    'Tensor': lambda x: x,
    'PngImageFile': lambda x: x,
    'str': lambda x: x
}


# tumor type to 4. Currently UDH, ADH, FEA and DCIS are grouped under the same label
TUMOR_TYPE_TO_LABEL = {
    'benign': 0,
    'pathologicalbenign': 1,
    'dcis': 2,
    'malignant': 3,
    'udh': 1,
    'adh': 4,
    'fea': 4
}


# List of classes to discard for training
DATASET_BLACKLIST = []

